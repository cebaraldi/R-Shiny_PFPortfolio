integer(32)
X<-cbind(mtcars,integer(rows(mtcars)))
X<-cbind(mtcars,integer(nrows(mtcars)))
X<-cbind(mtcars,integer(nrow(mtcars)))
X
dim(X)
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
sessionInfo()
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
x <- mtcars
exists(x)
exists("x")
shiny::runApp('PFStocks')
fsecol <- "Close"
FSE = Quandl("FSE/BMW_X"),type="zoo")[,fsecol]
FSE = Quandl("FSE/BMW_X",type="zoo")[,fsecol]
names(FSE)
names(FSE) <- "foo"
names(FSE)
head(FSE)
X = Quandl("FSE/ADS_X",type="zoo")[,fsecol]
FSE <- merge(FSE,X)
names(FSE)
?merge.zoo
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('RDatasets')
shiny::runApp('RDatasets')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
shiny::runApp('PFStocks')
library("googleVis", lib.loc="~/Downloads/R-3.1.0/library")
data(CityPopularity)
CityPopularity
Cairo
dim(Cairo)
Cairo
G2 <- gvisGeoChart(Exports, "Country", "Profit",
options=list(region="150"))
plot(G2)
Country
Exports
G1a <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit')
plot(G1a)
G1b <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit',
options=list(projection="kavrayskiy-vii"))
plot(G1b)
require(datasets)
states <- data.frame(state.name, state.x77)
G3 <- gvisGeoChart(states, "state.name", "Illiteracy",
options=list(region="US", displayMode="regions",
resolution="provinces",
width=600, height=400))
plot(G3)
G4 <- gvisGeoChart(CityPopularity, locationvar='City', colorvar='Popularity',
options=list(region='US', height=350,
displayMode='markers',
colorAxis="{values:[200,400,600,800],
colors:[\'red', \'pink\', \'orange',\'green']}")
)
plot(G4)
G5 <- gvisGeoChart(Andrew, "LatLong", colorvar='Speed_kt',
options=list(region="US"))
plot(G5)
Andrew
G6 <- gvisGeoChart(Andrew, "LatLong", sizevar='Speed_kt',
colorvar="Pressure_mb", options=list(region="US"))
plot(G6)
require(stats)
data(quakes)
head(quakes)
quakes$latlong<-paste(quakes$lat, quakes$long, sep=":")
G7 <- gvisGeoChart(quakes, "latlong", "depth", "mag",
options=list(displayMode="Markers", region="009",
colorAxis="{colors:['red', 'grey']}",
backgroundColor="lightblue"))
plot(G7)
library(XML)
url <- "http://en.wikipedia.org/wiki/List_of_countries_by_credit_rating"
x <- readHTMLTable(readLines(url), which=3)
levels(x$Rating) <- substring(levels(x$Rating), 4,
nchar(levels(x$Rating)))
x$Ranking <- x$Rating
levels(x$Ranking) <- nlevels(x$Rating):1
x$Ranking <- as.character(x$Ranking)
x$Rating <- paste(x$Country, x$Rating, sep=": ")
#### Create a geo chart
G8 <- gvisGeoChart(x, "Country", "Ranking", hovervar="Rating",
options=list(gvis.editor="S&P",
colorAxis="{colors:['#91BFDB', '#FC8D59']}"))
plot(G8)
Andrew
str(Andrew)
df <- data.frame(Postcode=c("EC3M 7HA", "EC2P 2EJ"),
Tip=c("Lloyd's",
"Guildhall"))
M2 <- gvisMap(df, "Postcode", "Tip",
options=list(showTip=TRUE, mapType='normal',
enableScrollWheel=TRUE))
plot(M2)
df
M2
df
M3 <- gvisMap(df, "Postcode", "Tip",
options=list(showTip=TRUE, mapType='normal',
enableScrollWheel=TRUE,
icons=paste0("{",
"'default': {'normal': 'http://icons.iconarchive.com/",
"icons/icons-land/vista-map-markers/48/",
"Map-Marker-Ball-Azure-icon.png',\n",
"'selected': 'http://icons.iconarchive.com/",
"icons/icons-land/vista-map-markers/48/",
"Map-Marker-Ball-Right-Azure-icon.png'",
"}}")))
plot(M3)
data(Andrew)
M1 <- gvisMap(Andrew, "LatLong" , "Tip",
options=list(showTip=TRUE, showLine=TRUE, enableScrollWheel=TRUE,
mapType='hybrid', useMapTypeControl=TRUE,
width=800,height=400))
plot(M1)
googlevis(demo)
search()
googleVis(demo)
package::googleVis(demo)
?"googleVis"
?gvisGeoChart
Regions
search()
objects(pos=3)
?gvisGeoChart
if(!library(leaflet)) install_github("rstudio/leaflet")
if(!require(leaflet)) install_github("rstudio/leaflet")
m <- leaflet()
m
(m <- leaflet() %>% addTiles())
?addTiles
setView
?setView
(m2 <- m %>%
setView(-1.5, 53.4, 10) %>% # map location
addMarkers(-1.4, 53.5) %>% # add a marker
addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
# add som circles:
addCircles(color = "black", runif(90, -2, -1),
runif(90, 53, 54), runif(90, 10, 500)))
(m2 <- m %>%
setView(-1.5, 53.4, 10) %>% # map location
addMarkers(-1.4, 53.5) %>% # add a marker
addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
addPopups(-1.4, 55.3, popup = "Hello hello!") %>% # popup
# add som circles:
addCircles(color = "black", runif(90, -2, -1),
runif(90, 53, 54), runif(90, 10, 500)))
(m2 <- m %>%
setView(-1.5, 53.4, 10) %>% # map location
addMarkers(-1.4, 53.5) %>% # add a marker
addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
addPopups(-1.4, 53.2, popup = "Hello hello!") %>% # popup
# add som circles:
addCircles(color = "black", runif(90, -2, -1),
runif(90, 53, 54), runif(90, 10, 500)))
(m2 <- m %>%
setView(-1.5, 53.4, 10) %>% # map location
addMarkers(-1.4, 53.5) %>% # add a marker
addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
addPopups(-1.8, 53.2, popup = "Hello hello!") %>% # popup
# add som circles:
addCircles(color = "black", runif(90, -2, -1),
runif(90, 53, 54), runif(90, 10, 500)))
?addMarkers
(m2 <- m %>%
setView(-1.5, 53.4, 10) %>% # map location
addMarkers(-1.4, 53.5) %>% # add a marker
addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
addMarkers(-1.8, 53.2, popup = "Hello hello!") %>% # popup
# add som circles:
addCircles(color = "black", runif(90, -2, -1),
runif(90, 53, 54), runif(90, 10, 500)))
icons()
names(icons())
names(icons
)
geoCode("Frankfurt")
source('~/R/geocodes.R')
getGeoCode("Frankfurt am Main,Germany")
shiny::runApp('leaflet')
shiny::runApp('leaflet')
(m <- leaflet() %>% addTiles())
(m2 <- m %>%
setView(lat=50, lng=8, 10) %>% # map location
#addMarkers(-1.4, 53.5) %>% # add a marker
#addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
#addMarkers(-1.8, 53.2, popup = "Hello again!") %>% # popup
addMarkers(lat=50.1167,lng=8.7333, popup="10640 Offenbach Main, HE, Germany") %>%
addMarkers(lat=50.0900,lng=8.7861, popup="10641 Offenbach Wetterpar, HE, Germany")
# add som circles:
#addCircles(color = "black", runif(90, -2, -1),
#           runif(90, 53, 54), runif(90, 10, 500))
)
(m <- leaflet() %>% addTiles())
(m2 <- m %>%
setView(lat=50, lng=8.8, 10) %>% # map location
#addMarkers(-1.4, 53.5) %>% # add a marker
#addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
#addMarkers(-1.8, 53.2, popup = "Hello again!") %>% # popup
addMarkers(lat=50.1167,lng=8.7333, popup="10640 Offenbach Main, HE, Germany") %>%
addMarkers(lat=50.0900,lng=8.7861, popup="10641 Offenbach Wetterpar, HE, Germany")
# add som circles:
#addCircles(color = "black", runif(90, -2, -1),
#           runif(90, 53, 54), runif(90, 10, 500))
)
(m2 <- m %>%
setView(lat=50, lng=8.8, 10) %>% # map location
#addMarkers(-1.4, 53.5) %>% # add a marker
#addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
#addMarkers(-1.8, 53.2, popup = "Hello again!") %>% # popup
addMarkers(lat=50.1167,lng=8.7333, popup="10640 Offenbach Main,\nHE, Germany") %>%
addMarkers(lat=50.0900,lng=8.7861, popup="10641 Offenbach Wetterpar,\nHE, Germany")
# add som circles:
#addCircles(color = "black", runif(90, -2, -1),
#           runif(90, 53, 54), runif(90, 10, 500))
)
(m <- leaflet() %>% addTiles())
#img <- readPNG("~/repos/Creating-maps-in-R/figure//shiny_world.png")
#grid.raster(img)
#Adding basic features with %>%(m <- leaflet() %>% addTiles())#
#m %>% setView(lng = -1.5, lat = 53.4, zoom = 10) # set centre and extent of map
(m2 <- m %>%
setView(lat=50, lng=8.8, 10) %>% # map location
#addMarkers(-1.4, 53.5) %>% # add a marker
#addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
#addMarkers(-1.8, 53.2, popup = "Hello again!") %>% # popup
addMarkers(lat=50.1167,lng=8.7333, popup="10640 Offenbach Main,\nHE, Germany") %>%
addMarkers(lat=50.0900,lng=8.7861, popup="10641 Offenbach Wetterpar,\nHE, Germany")
# add som circles:
#addCircles(color = "black", runif(90, -2, -1),
#           runif(90, 53, 54), runif(90, 10, 500))
)
# Install devtools if needed
if(!require(devtools)) install.packages("devtools")
# Install leaflet package
#if (!require("leaflet"))install.packages('leaflet')
if(!require(leaflet)) install_github("rstudio/leaflet")
#if(!require(rgdal)) install_github("rstudio/rgdal")
if(!require(rgdal)) install.packages("rgdal")
#A first web map with leaflet
#
# Plot a default web map (brackets display the result)
(m <- leaflet() %>% addTiles())
#img <- readPNG("~/repos/Creating-maps-in-R/figure//shiny_world.png")
#grid.raster(img)
#Adding basic features with %>%(m <- leaflet() %>% addTiles())#
#m %>% setView(lng = -1.5, lat = 53.4, zoom = 10) # set centre and extent of map
(m2 <- m %>%
setView(lat=50.1, lng=8.8, 10) %>% # map location
#addMarkers(-1.4, 53.5) %>% # add a marker
#addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
#addMarkers(-1.8, 53.2, popup = "Hello again!") %>% # popup
addMarkers(lat=50.1167,lng=8.7333, popup="10640 Offenbach Main,\nHE, Germany") %>%
addMarkers(lat=50.0900,lng=8.7861, popup="10641 Offenbach Wetterpar,\nHE, Germany")
# add som circles:
#addCircles(color = "black", runif(90, -2, -1),
#           runif(90, 53, 54), runif(90, 10, 500))
)
# Install devtools if needed
if(!require(devtools)) install.packages("devtools")
# Install leaflet package
#if (!require("leaflet"))install.packages('leaflet')
if(!require(leaflet)) install_github("rstudio/leaflet")
#if(!require(rgdal)) install_github("rstudio/rgdal")
#if(!require(rgdal)) install.packages("rgdal")
#A first web map with leaflet
#
# Plot a default web map (brackets display the result)
(m <- leaflet() %>% addTiles())
#img <- readPNG("~/repos/Creating-maps-in-R/figure//shiny_world.png")
#grid.raster(img)
#Adding basic features with %>%(m <- leaflet() %>% addTiles())#
#m %>% setView(lng = -1.5, lat = 53.4, zoom = 10) # set centre and extent of map
(m2 <- m %>%
setView(lat=50.1, lng=8.8, 10) %>% # map location
#addMarkers(-1.4, 53.5) %>% # add a marker
#addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup
#addMarkers(-1.8, 53.2, popup = "Hello again!") %>% # popup
addMarkers(lat=50.1167,lng=8.7333, popup="10640 Offenbach Main,\nHE, Germany") %>%
addMarkers(lat=50.0900,lng=8.7861, popup="10641 Offenbach Wetterpar,\nHE, Germany")
# add som circles:
#addCircles(color = "black", runif(90, -2, -1),
#           runif(90, 53, 54), runif(90, 10, 500))
)
source('~/.active-rstudio-document')
runif(3)
runif(3)*180-90
print(url)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
API <- "4e86dd64f01a607a"
lat <- runif()*180-90
lng <- runif()*360-180
latlng <- paste(lat,lng,sep=",")
lat
runif()
source('~/.active-rstudio-document')
?GET()
API <- "hDUA4xzpnCvZwFygscUf"
Quandl.auth(API)
params <- list(
query = "*",
source_code = "FSE",
per_page = 300,
page = 1,
auth_token = API
)
page <- GET("https://www.quandl.com/",
path = "api/v2/datasets.xml",
query = params)
if (!require("Quandl"))
install.packages('Quandl')
page <- GET("https://www.quandl.com/",
path = "api/v2/datasets.xml",
query = params)
if (!require("httr"))
install.packages('httr')
if (!require("XML"))
install.packages('XML')
if (!require("Quandl"))
install.packages('Quandl')
#Immediately enter the browser when an error occurs
#options(error = browser)
API <- "hDUA4xzpnCvZwFygscUf"
Quandl.auth(API)
params <- list(
query = "*",
source_code = "FSE",
per_page = 300,
page = 1,
auth_token = API
)
page <- GET("https://www.quandl.com/",
path = "api/v2/datasets.xml",
query = params)
?GET
source('~/.active-rstudio-document')
source('~/R/w1/wg1.R')
page <- GET("http://api.wunderground.com/",
path = "api/4e86dd64f01a607a/geolookup/q/37.776289,-122.395234.json")
)
GET("http://api.wunderground.com/")
?download
R.version
r <-  GET("http://api.wunderground.com/")
if (!require("httr"))install.packages('httr')
r <-  GET("http://api.wunderground.com/")
r
header(r)
headers(r)
r <-  GET("http://api.wunderground.com/")
print(r)
print(headers(r))
print(content(r))
print(str(ontent(r)))
print(str(content(r)))
str(content(r))
print(str(content(r)))
warn_for_status(r)
stop_for_status(r)
http_status(r)
r$status_code
q()
R.version
setwd("~/R/PFStocks")
shiny::runApp()
install.packages("DT")
shiny::runApp()
if (!require("Quandl"))
install.packages('Quandl')
API <- "hDUA4xzpnCvZwFygscUf"
Quandl.auth(API)
shiny::runApp()
source('~/R/geocodes.R')
getGeoCode("Aalborg, Denmark")
getGeoCode("Frankfurt, Germany")
paste(getGeoCode("Frankfurt, Germany"),collapse="",sep=",")
paste(getGeoCode("Frankfurt, Germany"),collapse=",")
GET("http://api.wunderground.com/")
round(50.1109221, digits = 2)
round(50.1109221)
?sapply
getGeoCode("Frankfurt, Germany")
sapply(as.numeric(getGeoCode("Frankfurt, Germany"))
sapply(getGeoCode("Frankfurt, Germany"),as.numeric)
round(sapply(getGeoCode("Frankfurt, Germany"),as.numeric),digits=2)
as.character(round(sapply(getGeoCode("Frankfurt, Germany"),as.numeric),digits=2))
paste(as.character(round(sapply(getGeoCode("Frankfurt, Germany"),as.numeric),digits=2)),collapse=",")
gc <- getGeoCode("Frankfurt, Germany")
paste(as.character(
round(sapply(gc,as.numeric),digits=2)
),collapse=",")
page <- GET("http://api.wunderground.com/",
path="api/4e86dd64f01a607a/geolookup/q/50.1,8.8.json")
paste(as.character(
round(sapply(gc,as.numeric),digits=2)
),collapse=",")
latlng <- paste(as.character(
round(sapply(gc,as.numeric),digits=2)
),collapse=",")
page <- GET("http://api.wunderground.com/",
path=paste(
"api/4e86dd64f01a607a/geolookup/q/",
latlng,
".json",
sep="")
)
if (!require("httr"))install.packages('httr')
API <- "4e86dd64f01a607a"
lat <- runif(1)*180-90
lng <- runif(1)*360-180
latlng <- paste(lat,lng,sep=",")
getGeoCode <- function(gcStr)  {
require("RJSONIO") #Load Library
gcStr <- gsub(' ','%20',gcStr) #Encode URL Parameters
#Open Connection
connectStr <- paste("http://maps.google.com/maps/api/geocode/json?sensor=false&address=",gcStr, sep="")
con <- url(connectStr)
data.json <- fromJSON(paste(readLines(con), collapse=""))
close(con)
#Flatten the received JSON
data.json <- unlist(data.json)
if(data.json["status"]=="OK")   {
lat <- data.json["results.geometry.location.lat"]
lng <- data.json["results.geometry.location.lng"]
gcodes <- c(lat, lng)
names(gcodes) <- c("Lat", "Lng")
return (gcodes)
}
}
gc <- getGeoCode("Frankfurt, Germany")
latlng <- paste(as.character(
round(sapply(gc,as.numeric),digits=2)
),collapse=",")
r <- GET("http://api.wunderground.com/",
path=paste(
"api/4e86dd64f01a607a/geolookup/q/",
latlng,
".json",
sep="")
)
print(r)
print(headers(r))
print(str(content(r)))
warn_for_status(r)
stop_for_status(r)
if (!require("httr"))install.packages('httr')
API <- "4e86dd64f01a607a"
lat <- runif(1)*180-90
lng <- runif(1)*360-180
latlng <- paste(lat,lng,sep=",")
getGeoCode <- function(gcStr)  {
require("RJSONIO") #Load Library
gcStr <- gsub(' ','%20',gcStr) #Encode URL Parameters
#Open Connection
connectStr <- paste("http://maps.google.com/maps/api/geocode/json?sensor=false&address=",gcStr, sep="")
con <- url(connectStr)
data.json <- fromJSON(paste(readLines(con), collapse=""))
close(con)
#Flatten the received JSON
data.json <- unlist(data.json)
if(data.json["status"]=="OK")   {
lat <- data.json["results.geometry.location.lat"]
lng <- data.json["results.geometry.location.lng"]
gcodes <- c(lat, lng)
names(gcodes) <- c("Lat", "Lng")
return (gcodes)
}
}
gc <- getGeoCode("Frankfurt, Germany")
latlng <- paste(as.character(
round(sapply(gc,as.numeric),digits=2)
),collapse=",")
#http://api.wunderground.com/api/4e86dd64f01a607a/geolookup/q/50.1,8.8.json
r <- GET("http://api.wunderground.com/",
path=paste(paste(
"api",API,"geolookup/q/",sep="/"),
latlng,
".json",
sep="")
)
print(r)
print(headers(r))
print(str(content(r)))
content(r)
print(r)
print(str(content(r)))
